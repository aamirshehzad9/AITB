@{
    ViewData["Title"] = "Login - AITB Trading Platform";
    Layout = "_Layout";
}

<div class="login-container">
    <div class="login-card">
        <div class="login-header">
            <h1>AITB Trading Platform</h1>
            <p>Advanced AI Trading Bot - Login Required</p>
        </div>

        <form id="loginForm" class="login-form">
            <div class="form-group">
                <label for="username">Username</label>
                <input type="text" id="username" name="username" class="form-control" required>
            </div>

            <div class="form-group">
                <label for="password">Password</label>
                <input type="password" id="password" name="password" class="form-control" required>
            </div>

            <button type="submit" class="btn btn-primary btn-login" id="loginBtn">
                <span class="btn-text">Login</span>
                <span class="btn-loading" style="display: none;">Logging in...</span>
            </button>

            <div id="loginError" class="error-message" style="display: none;"></div>
        </form>

        <div class="demo-users">
            <h4>Demo Users</h4>
            <div class="demo-user-list">
                <div class="demo-user" data-username="admin" data-password="admin123">
                    <span class="demo-role admin">Admin</span>
                    <span class="demo-username">admin / admin123</span>
                    <span class="demo-desc">Full access to bot controls and admin features</span>
                </div>
                <div class="demo-user" data-username="viewer" data-password="viewer123">
                    <span class="demo-role viewer">Viewer</span>
                    <span class="demo-username">viewer / viewer123</span>
                    <span class="demo-desc">Read-only access to charts and data</span>
                </div>
                <div class="demo-user" data-username="demo" data-password="demo123">
                    <span class="demo-role viewer">Demo</span>
                    <span class="demo-username">demo / demo123</span>
                    <span class="demo-desc">Demo user for testing</span>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
.login-container {
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(135deg, #0B0E11 0%, #1a1a2e 100%);
    padding: 20px;
}

.login-card {
    background: #16213e;
    border-radius: 12px;
    padding: 40px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
    width: 100%;
    max-width: 450px;
    border: 1px solid #2d3748;
}

.login-header {
    text-align: center;
    margin-bottom: 30px;
}

.login-header h1 {
    color: #F0B90B;
    margin-bottom: 8px;
    font-size: 28px;
    font-weight: 600;
}

.login-header p {
    color: #a0aec0;
    font-size: 14px;
    margin: 0;
}

.login-form {
    margin-bottom: 30px;
}

.form-group {
    margin-bottom: 20px;
}

.form-group label {
    display: block;
    color: #e2e8f0;
    font-weight: 500;
    margin-bottom: 8px;
    font-size: 14px;
}

.form-control {
    width: 100%;
    padding: 12px 16px;
    background: #2d3748;
    border: 1px solid #4a5568;
    border-radius: 8px;
    color: #e2e8f0;
    font-size: 16px;
    transition: border-color 0.2s;
}

.form-control:focus {
    outline: none;
    border-color: #F0B90B;
    box-shadow: 0 0 0 3px rgba(240, 185, 11, 0.1);
}

.btn-login {
    width: 100%;
    padding: 14px;
    background: #F0B90B;
    color: #000;
    border: none;
    border-radius: 8px;
    font-size: 16px;
    font-weight: 600;
    cursor: pointer;
    transition: background-color 0.2s;
    position: relative;
}

.btn-login:hover {
    background: #e6a509;
}

.btn-login:disabled {
    background: #4a5568;
    color: #a0aec0;
    cursor: not-allowed;
}

.error-message {
    background: #fed7d7;
    color: #c53030;
    padding: 12px;
    border-radius: 8px;
    margin-top: 16px;
    font-size: 14px;
    border: 1px solid #feb2b2;
}

.demo-users {
    border-top: 1px solid #2d3748;
    padding-top: 20px;
}

.demo-users h4 {
    color: #e2e8f0;
    margin-bottom: 15px;
    font-size: 16px;
    font-weight: 500;
}

.demo-user {
    display: flex;
    flex-direction: column;
    gap: 4px;
    padding: 12px;
    background: #2d3748;
    border-radius: 8px;
    margin-bottom: 8px;
    cursor: pointer;
    transition: background-color 0.2s;
    border: 1px solid #4a5568;
}

.demo-user:hover {
    background: #4a5568;
    border-color: #F0B90B;
}

.demo-role {
    font-size: 12px;
    font-weight: 600;
    text-transform: uppercase;
    padding: 2px 8px;
    border-radius: 4px;
    width: fit-content;
}

.demo-role.admin {
    background: #fc8181;
    color: #742a2a;
}

.demo-role.viewer {
    background: #68d391;
    color: #22543d;
}

.demo-username {
    color: #F0B90B;
    font-weight: 500;
    font-family: monospace;
}

.demo-desc {
    color: #a0aec0;
    font-size: 12px;
}

/* Loading state */
.btn-loading {
    opacity: 0.7;
}

.btn-text {
    transition: opacity 0.2s;
}

.loading .btn-text {
    opacity: 0;
}

.loading .btn-loading {
    opacity: 1;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const loginForm = document.getElementById('loginForm');
    const loginBtn = document.getElementById('loginBtn');
    const loginError = document.getElementById('loginError');
    const usernameInput = document.getElementById('username');
    const passwordInput = document.getElementById('password');

    // Demo user click handlers
    document.querySelectorAll('.demo-user').forEach(userEl => {
        userEl.addEventListener('click', function() {
            const username = this.dataset.username;
            const password = this.dataset.password;
            
            usernameInput.value = username;
            passwordInput.value = password;
            
            // Add visual feedback
            this.style.background = '#F0B90B';
            this.style.color = '#000';
            setTimeout(() => {
                this.style.background = '';
                this.style.color = '';
            }, 200);
        });
    });

    // Login form submission
    loginForm.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const username = usernameInput.value.trim();
        const password = passwordInput.value.trim();
        
        if (!username || !password) {
            showError('Please enter both username and password');
            return;
        }

        setLoading(true);
        hideError();

        try {
            const response = await fetch('/api/auth/login', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ username, password })
            });

            const result = await response.json();

            if (response.ok && result.success) {
                // Store token and user info
                localStorage.setItem('authToken', result.token);
                localStorage.setItem('userRole', result.role);
                localStorage.setItem('username', result.username);
                
                console.log('Login successful:', result);
                
                // Redirect to main trading page
                window.location.href = '/trade';
            } else {
                showError(result.message || 'Login failed');
            }
        } catch (error) {
            console.error('Login error:', error);
            showError('Network error: Unable to connect to server');
        } finally {
            setLoading(false);
        }
    });

    function setLoading(loading) {
        loginBtn.disabled = loading;
        if (loading) {
            loginBtn.classList.add('loading');
            document.querySelector('.btn-text').style.display = 'none';
            document.querySelector('.btn-loading').style.display = 'inline';
        } else {
            loginBtn.classList.remove('loading');
            document.querySelector('.btn-text').style.display = 'inline';
            document.querySelector('.btn-loading').style.display = 'none';
        }
    }

    function showError(message) {
        loginError.textContent = message;
        loginError.style.display = 'block';
    }

    function hideError() {
        loginError.style.display = 'none';
    }

    // Check if already logged in
    const token = localStorage.getItem('authToken');
    if (token) {
        // Validate token
        fetch('/api/auth/validate', {
            headers: {
                'Authorization': `Bearer ${token}`
            }
        })
        .then(response => {
            if (response.ok) {
                // Already logged in, redirect
                window.location.href = '/trade';
            } else {
                // Invalid token, clear storage
                localStorage.removeItem('authToken');
                localStorage.removeItem('userRole');
                localStorage.removeItem('username');
            }
        })
        .catch(error => {
            console.error('Token validation error:', error);
        });
    }
});
</script>