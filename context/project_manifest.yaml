# AITB Project Manifest
# Agents MUST read this file before any action
version: "1.0"
project:
  name: "AITB - AI Trading Bot"
  description: "Multi-service AI trading system with real-time data processing and ML inference"
  
services:
  # Service definitions with ports from Docker Compose
  influxdb:
    port: 8086
    type: "time-series-database"
    image: "influxdb:2.7-alpine"
    container: "aitb-influxdb"
    
  telegraf:
    type: "metrics-collector"
    image: "telegraf:1.28-alpine"
    container: "aitb-telegraf"
    
  grafana:
    port: 3001
    type: "visualization-dashboard"
    image: "grafana/grafana-oss:10.2.0"
    container: "aitb-grafana"
    
  inference:
    port: 8001
    type: "ml-inference-service"
    build: "./services/inference"
    container: "aitb-inference"
    
  bot:
    type: "trading-engine"
    build: "./services/bot"
    container: "aitb-bot"
    
  dashboard:
    port: 8501
    type: "streamlit-dashboard"
    build: "./services/dashboard"
    container: "aitb-dashboard"
    
  aitb-webapp:
    port: 5000
    type: "aspnet-webapp"
    build: "./AITB.WebApp"
    container: "aitb-webapp"
    
  notifier:
    type: "notification-service"
    build: "./services/notifier"
    container: "aitb-notifier"
    
  watchtower:
    type: "container-updater"
    image: "containrrr/watchtower:1.6.0"
    container: "aitb-watchtower"

# Start order as specified
start_order:
  - influxdb
  - telegraf
  - grafana
  - inference
  - bot
  - dashboard
  - aitb-webapp
  - notifier
  - watchtower

# Volume mappings - all writable paths bind-mounted to D:\docker\{service}\...
volumes:
  influxdb_data:
    host_path: "D:\\docker\\influxdb\\data"
    container_path: "/var/lib/influxdb2"
    
  influxdb_config:
    host_path: "D:\\docker\\influxdb\\config"
    container_path: "/etc/influxdb2"
    
  grafana_data:
    host_path: "D:\\docker\\grafana\\data"
    container_path: "/var/lib/grafana"
    
  bot_data:
    host_path: "D:\\docker\\bot\\data"
    container_path: "/app/data"
    
  shared_models:
    host_path: "D:\\docker\\models"
    container_path: "/app/data/models"
    description: "Shared ML models for bot and inference services"
    
  shared_logs:
    host_path: "D:\\docker\\logs"
    container_path: "/app/logs or /var/log/{service}"
    description: "Centralized logging for all services"

# Environment variable keys (values from D:\Myenv.txt)
environment_keys:
  # InfluxDB
  - INFLUX_USERNAME
  - INFLUX_PASSWORD
  - INFLUX_ORG
  - INFLUX_BUCKET
  - INFLUX_TOKEN
  - INFLUX_URL
  
  # Trading APIs
  - COINAPI_KEY
  - COINMARKETCAP_KEY
  - BINANCE_API_KEY
  - BINANCE_SECRET_KEY
  - BINANCE_BASE_URL
  - BINANCE_STREAM_URL
  
  # AI/ML
  - HF_TOKEN
  - HF_API_KEY
  
  # Notifications
  - TG_BOT_TOKEN
  - TG_CHAT_ID
  
  # Grafana
  - GRAFANA_USER
  - GRAFANA_PASSWORD
  
  # Runtime
  - LOG_LEVEL
  - MCP_BASE_URL

# Database Configuration (Episode 9)
database:
  schema_documentation: "docs/db_universal_headers.md"
  description: "Episode 9 - Universal database headers with exact column definitions and daily Parquet exports"
  
  export_specification:
    base_path: "D:\\archives\\parquet"
    pattern: "D:\\archives\\parquet\\YYYY-MM-DD\\"
    format: "Daily Parquet exports organized by date"
    schedule: "02:00 UTC daily"
    compression: "snappy"
    retention: "indefinite"
  
  tables:
    candles:
      description: "OHLCV candlestick data for technical analysis"
      primary_key: "(symbol, timeframe, timestamp)"
      retention_hot: "90 days (1m,5m), 1 year (1h,1d)"
      retention_warm: "2 years (compressed)"
      
    trades:
      description: "Individual trade execution records"
      primary_key: "id"
      retention_hot: "30 days"
      retention_warm: "1 year (compressed)"
      
    orderbook:
      description: "Market depth snapshots"
      primary_key: "(symbol, timestamp, side, price_level)"
      retention_hot: "7 days"
      retention_warm: "6 months (compressed)"
      
    futures_ctx:
      description: "Futures context (funding rates, open interest)"
      primary_key: "(symbol, timestamp, context_type)"
      retention_hot: "90 days"
      retention_warm: "1 year (compressed)"
      
    liquidations:
      description: "Forced position closure events"
      primary_key: "id"
      retention_hot: "180 days"
      retention_warm: "2 years (compressed)"
      
    features:
      description: "ML feature store"
      primary_key: "(symbol, timestamp, feature_set, feature_name)"
      retention_hot: "30 days"
      retention_warm: "6 months (compressed)"
  
  archival:
    format: "parquet"
    base_path: "D:\\archives\\parquet"
    structure_pattern: "D:\\archives\\parquet\\YYYY-MM-DD\\"
    schedule: "02:00 UTC daily"
    compression: "snappy"
    retention: "indefinite"
    partitioning: "daily by date"
    
    export_patterns:
      candles: "{SYMBOL}_{TIMEFRAME}_{YYYY-MM-DD}.parquet"
      trades: "{SYMBOL}_trades_{YYYY-MM-DD}_{HH}.parquet"
      orderbook: "{SYMBOL}_orderbook_{YYYY-MM-DD}_{HH}.parquet"
      futures_ctx: "{SYMBOL}_{CONTEXT_TYPE}_{YYYY-MM-DD}.parquet"
      liquidations: "liquidations_{YYYY-MM-DD}.parquet"
      features: "{SYMBOL}_{FEATURE_TYPE}_{YYYY-MM-DD}.parquet"

# Acceptance checks (see Episode 5)
acceptance_checks:
  health_endpoints:
    - service: "inference"
      url: "http://localhost:8001/health"
      expected: 200
    - service: "bot"
      url: "http://localhost:8000/health"
      expected: 200
    - service: "aitb-webapp"
      url: "http://localhost:5000/health/live"
      expected: 200
    - service: "aitb-webapp-api"
      url: "http://localhost:5000/api/status"
      expected: 200
      
  service_health:
    - all_services_running: true
    - bot_heartbeat_logs: true
    - grafana_datasource_ok: true
    - webapp_home_renders: true
    - api_ping_accessible: true

# TradingView-Aligned API Contracts (Episode 8)
contracts:
  api_base_path: "contracts/api/"
  description: "TradingView-compatible broker API contracts for market data and trading operations"
  version: "1.0.0"
  
  market_data:
    history:
      file: "history.json"
      endpoint: "/history"
      description: "Historical OHLCV data with 00:00 UTC daily bars rule"
      requirements:
        - "Daily bars MUST start at 00:00 UTC"
        - "â‰¤5% missing bars rule documented and enforced"
        - "OHLC validation with positive volumes"
      fields: ["s", "t[]", "o[]", "h[]", "l[]", "c[]", "v[]"]
      
    quotes:
      file: "quotes.json"
      endpoint: "/quotes"
      description: "Real-time bid/ask quotes with market data"
      fields: ["s", "t", "bid", "ask", "spread", "v"]
      real_time: true
      max_latency_ms: 100
      
    depth:
      file: "depth.json"
      endpoint: "/depth"
      description: "Level 2 order book depth data"
      fields: ["s", "bids[]", "asks[]", "t"]
      real_time: true
      max_staleness_ms: 1000
      
  metadata:
    symbol_info:
      file: "symbol_info.json"
      endpoint: "/symbol_info"
      description: "Symbol specifications and trading rules"
      purpose: "TradingView symbol configuration"
      
    groups:
      file: "groups.json"
      endpoint: "/groups"
      description: "Symbol grouping and permission management"
      purpose: "Access control and symbol organization"
      
    permissions:
      file: "permissions.json"
      endpoint: "/permissions"
      description: "User permissions and trading restrictions"
      purpose: "User access control and risk management"
      
  trading_operations:
    orders:
      file: "orders.json"
      endpoints:
        place: "POST /orders"
        preview: "POST /orders/preview"
        modify: "PUT /orders/{id}"
        cancel: "DELETE /orders/{id}"
        list: "GET /orders"
        get: "GET /orders/{id}"
      description: "Complete order lifecycle with preview capabilities"
      required_fields:
        - "currentBid"
        - "currentAsk"
        - "timestamp"
        - "commission"
      features:
        - "Order preview with cost calculation"
        - "Risk validation and warnings"
        - "Market impact assessment"

# Configuration
mockable: false  # Mocks are forbidden unless this is set to true
security:
  - no_secrets_in_commits: true
  - env_values_from_external: "D:\\Myenv.txt"
